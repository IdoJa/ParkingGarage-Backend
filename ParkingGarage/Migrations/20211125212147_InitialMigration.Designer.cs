// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParkingGarage.Data;

namespace ParkingGarage.Migrations
{
    [DbContext(typeof(VehicleContext))]
    [Migration("20211125212147_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ParkingGarage.Models.ParkingLot.ParkingLot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("LicensePlateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LicensePlateId");

                    b.ToTable("ParkingLots");
                });

            modelBuilder.Entity("Vehicle.Vehicle", b =>
                {
                    b.Property<int>("LicensePlateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<int>("TicketType")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("LicensePlateId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("ParkingGarage.Models.ParkingLot.ParkingLot", b =>
                {
                    b.HasOne("Vehicle.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("LicensePlateId");
                });
#pragma warning restore 612, 618
        }
    }
}
